kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: traefik-daemon-set
spec:
  selector:
    matchLabels:
      app: traefik
  template:
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:v2.9.4
        name: traefik-ingress-lb
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        - name: admin
          containerPort: 8080
          hostPort: 8080
        securityContext:
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        args:
        # Enable the dashboard without requiring a password. Not recommended for production.
        - --api.insecure
        - --api.dashboard

        # Specify that we want to use Traefik as an Ingress Controller.
        - --providers.kubernetesingress
        # needed for the grafana.debatemap.app ingress-route to work
        - --providers.kubernetescrd.allowCrossNamespace=true
        - --providers.kubernetescrd.allowExternalNameServices=true

        # Define two entrypoint ports, and setup a redirect from HTTP to HTTPS.
        - --entryPoints.web.address=:80
        # commented, to fix this issue: https://community.cloudflare.com/t/community-tip-fixing-err-too-many-redirects/42335
        # end users don't need this anyway, since Cloudflare takes care of it (also, I like the idea of retaining the ability to serve http from the cluster, for direct/dev connections)
        #- --entryPoints.web.http.redirections.entryPoint.to=websecure
        #- --entryPoints.web.http.redirections.entryPoint.scheme=https
        - --entryPoints.websecure.address=:443
        - --entryPoints.websecure.http.tls=true

        # Enable debug logging. Useful to work out why something might not be working. Fetch logs of the pod.
        - --log.level=debug

        # Let's Encrypt Configurtion.
        # - --certificatesresolvers.default.acme.email=venryx@gmail.com
        # - --certificatesresolvers.default.acme.storage=acme_3.json
        # - --certificatesresolvers.default.acme.tlschallenge
        # # Use the staging ACME server. Uncomment this while testing to prevent hitting rate limits in production.
        # - --certificatesresolvers.default.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory