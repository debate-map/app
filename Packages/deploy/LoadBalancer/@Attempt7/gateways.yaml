---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: GatewayClass
metadata:
  name: gateway-class-main
spec:
  controllerName: traefik.io/gateway-controller

# The HTTP (ie. non-HTTPS) gateway. It's used for:
# 1) Serving the proxy requests coming from Cloudflare/[debatemap/debates].app. (will probably switch it to use the HTTPS gateway in the future)
# 2) Serving the ECMA tls-certificate provisioning process.
# 3) For various debugging/development purposes.
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: gateway-http
  #annotations:
  #  cert-manager.io/cluster-issuer: zerossl-issuer
spec:
  gatewayClassName: gateway-class-main
  # cert-manager is picky about the values of these fields; reference this before making changes: https://cert-manager.io/docs/usage/gateway
  listeners:
  - name: http
    #hostname: 9m2x1z.nodes.c1.or1.k8s.ovh.us
    protocol: HTTP
    #port: 80
    port: 8000
    #port: 8005
    allowedRoutes:
      namespaces:
        from: All

# The HTTPS gateway. It's used for:
# 1) Serving requests coming from debating.app. (which is the alternate domain that avoids the cloudflare-cdn, eg. to fully avoid the websocket-timeout concern)
# 2) As backup for the ".app" domains, since they are required to be served as HTTPS. (if Cloudflare has issues, I want the origin server to be able to provide HTTPS connections)
# UPDATE: Disabled for now, till cert-manager issue is resolved. (https://github.com/traefik/traefik/issues/9158)
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: gateway-https
  annotations:
    cert-manager.io/cluster-issuer: zerossl-issuer
spec:
  gatewayClassName: gateway-class-main
  # cert-manager is picky about the values of these fields; reference this before making changes: https://cert-manager.io/docs/usage/gateway

# 1st variant of listeners, use numbered certificate keys
  listeners:
    # origin/ovh
    - {name: https-ovh, hostname: 9m2x1z.nodes.c1.or1.k8s.ovh.us, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    - {name: https-ovh-as, hostname: app-server.9m2x1z.nodes.c1.or1.k8s.ovh.us, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    - {name: https-ovh-monitor, hostname: monitor.9m2x1z.nodes.c1.or1.k8s.ovh.us, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    # debating.app
    - {name: https-d1, hostname: debating.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    - {name: https-d1-as, hostname: app-server.debating.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    - {name: https-d1-monitor, hostname: monitor.debating.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    # debatemap.app
    - {name: https-d2, hostname: debatemap.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    - {name: https-d2-as, hostname: app-server.debatemap.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    - {name: https-d2-monitor, hostname: monitor.debatemap.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    # debates.app
    - {name: https-d3, hostname: debates.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    - {name: https-d3-as, hostname: app-server.debates.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}
    - {name: https-d3-monitor, hostname: monitor.debates.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-prod15, kind: Secret, group: core}]}}

# 2nd variant of listeners, using "named" certificate keys
  # listeners:
  #   # origin/ovh
  #   - {name: https-ovh, hostname: 9m2x1z.nodes.c1.or1.k8s.ovh.us, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-ovh, kind: Secret, group: core}]}}
  #   - {name: https-ovh-as, hostname: app-server.9m2x1z.nodes.c1.or1.k8s.ovh.us, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-ovh-as, kind: Secret, group: core}]}}
  #   - {name: https-ovh-monitor, hostname: monitor.9m2x1z.nodes.c1.or1.k8s.ovh.us, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-ovh-monitor, kind: Secret, group: core}]}}
  #   # debating.app
  #   - {name: https-d1, hostname: debating.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-d1, kind: Secret, group: core}]}}
  #   - {name: https-d1-as, hostname: app-server.debating.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-d1-as, kind: Secret, group: core}]}}
  #   - {name: https-d1-monitor, hostname: monitor.debating.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-d1-monitor, kind: Secret, group: core}]}}
  #   # debatemap.app
  #   - {name: https-d2, hostname: debates.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-d2, kind: Secret, group: core}]}}
  #   - {name: https-d2-as, hostname: app-server.debates.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-d2-as, kind: Secret, group: core}]}}
  #   - {name: https-d2-monitor, hostname: monitor.debates.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-d2-monitor, kind: Secret, group: core}]}}
  #   # debates.app
  #   - {name: https-d3, hostname: debates.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-d3, kind: Secret, group: core}]}}
  #   - {name: https-d3-as, hostname: app-server.debates.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-d3-as, kind: Secret, group: core}]}}
  #   - {name: https-d3-monitor, hostname: monitor.debates.app, protocol: HTTPS, port: 8443, tls: {mode: Terminate, certificateRefs: [{name: zerossl-key-d3-monitor, kind: Secret, group: core}]}}



# gateway for the "monitoring" namespace
# ---
# apiVersion: gateway.networking.k8s.io/v1beta1
# kind: Gateway
# metadata:
#   name: gateway-for-monitoring-namespace
#   namespace: monitoring
# spec:
#   gatewayClassName: foo-lb
#   listeners:
#   - name: prod-web
#     port: 80
#     protocol: HTTP
#     allowedRoutes:
#       kinds: 
#         - kind: HTTPRoute
#       namespaces:
#         from: Selector
#         selector:
#           matchLabels:
#             # This label is added automatically as of K8s 1.22 to all namespaces
#             kubernetes.io/metadata.name: route-grafana