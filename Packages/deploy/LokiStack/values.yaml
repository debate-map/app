# note: loki-stack installs loki + prometheus + grafana + alert-manager

# Values for configuring the deployment of Grafana.
# * For deployment options, see: https://github.com/grafana/helm-charts/blob/main/charts/grafana/README.md
# * For grafana.ini options, see: https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana
grafana:
  enabled: true
  grafana.ini:
    security:
      allow_embedding: true
    server:
      #domain: localhost:5100
      root_url: "%(protocol)s://%(domain)s/grafana"
      serve_from_sub_path: true
  datasources:
    GeneralDataSources.yaml:
      apiVersion: 1
      datasources:
      - name: Pyroscope
        type: grafana-pyroscope-datasource
        uid: pyroscope-main
        url: http://pyroscope.monitoring.svc.cluster.local:4040/
  # define dashboards
  # dashboards:
  #   default:
      #pyroscope-cpu:
      #  json: [including it inline, with yaml multiline string [ie. using |], works; trying other approaches]
      # pyroscope-cpu0: {file: dashboards/pyroscope-cpu.json}
      # pyroscope-cpu1: {file: ./dashboards/pyroscope-cpu.json}
      # pyroscope-cpu2: {file: ../Packages/deploy/LokiStack/dashboards/pyroscope-cpu.json}
      # pyroscope-cpu3: {file: ../../Packages/deploy/LokiStack/dashboards/pyroscope-cpu.json}
      # pyroscope-cpu4: {file: ../../../Packages/deploy/LokiStack/dashboards/pyroscope-cpu.json}
      # pyroscope-cpu5: {file: ../../../../Packages/deploy/LokiStack/dashboards/pyroscope-cpu.json}
      # pyroscope-cpu6: {file: ../../../../../Packages/deploy/LokiStack/dashboards/pyroscope-cpu.json}
      # pyroscope-cpu7: {file: ../../../../../../Packages/deploy/LokiStack/dashboards/pyroscope-cpu.json}
      # pyroscope-cpu8: {file: ../../../../../../../Packages/deploy/LokiStack/dashboards/pyroscope-cpu.json}
      # pyroscope-cpu9: {file: ../../../../../../../../Packages/deploy/LokiStack/dashboards/pyroscope-cpu.json}
      #pyroscope-cpu0: {file: dashboards/pyroscope-cpu.json}

  # dashboards:
  #   enabled: true
  #   label: grafana_dashboard
  #   folder: /tmp/dashboards
  #   provider: 
  #     foldersFromFilesStructure: true
  #   # ?this allows for grafana dashboards to be auto-discovered, from configmaps with the annotation "k8s-sidecar-target-directory" set
  #   # annotations: 
  #   #   k8s-sidecar-target-directory: "/tmp/dashboards/kubernetes"
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  # dashboardsConfigMaps:
  #   pyroscope-cpu: grafana-dashboard-pyroscope-cpu

prometheus:
  enabled: true
  alertmanager:
    persistentVolume:
      enabled: false
  server:
    persistentVolume:
      enabled: false

loki:
  persistence:
    enabled: true
    #storageClassName: nfs-client
    size: 5Gi
  
  # History summary:
  # * first, based on: https://github.com/grafana/loki/issues/9190#issue-1674565430
  # * second, updated "compactor" section to match: https://github.com/grafana/loki/issues/9821#issuecomment-1718865483
  # * third, did some manual fixes/tweaks (eg. commenting out invalid "compactor.retention_table_timeout", and modifying deletion-delay fields [to "fast" values, temporarily])
  # * fourth, did some further manual tweaks (eg. retain for 1w), to better match preferences (not yet confirmed working; remove this when confirmed, ie. pvc storage confirmed to not keep filling up)
  # NOTE: To confirm if your config changes have been applied, open shell in loki-stack-0 pod, and run: `cd /etc/loki; cat loki.yaml`
  config:
    auth_enabled: false
    server:
      http_listen_port: 3100
    ingester:
      chunk_block_size: 262144
      chunk_idle_period: 3m
      chunk_retain_period: 2m
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
      max_transfer_retries: 0
      wal:
        dir: /data/loki/wal
    storage_config:
      boltdb_shipper:
        active_index_directory: /data/loki/boltdb-shipper-active
        cache_location: /data/loki/boltdb-shipper-cache
        cache_ttl: 24h
        shared_store: filesystem
      filesystem:
        directory: /data/loki/chunks
    schema_config:
      configs:
      - from: "2020-01-01"
        index:
          period: 24h
          prefix: index_
        object_store: filesystem
        schema: v11
        store: boltdb-shipper
      # 2024-03-18: Tried updating to tsdb (removing boltdb section above), but it failed. Found an error in pod saying "Not using boltdb-shipper index, not starting compactor". (maybe related)
      # - from: "2024-03-08"
      #   store: tsdb
      #   object_store: filesystem
      #   schema: v12
      #   index:
      #     prefix: tsdb_index_
      #     period: 24h
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h # 1 week (in hrs, to ensure accepted as multiple of 24h)
      retention_period: 168h # 1 week (in hrs, to ensure accepted as multiple of 24h)
    table_manager:
      retention_deletes_enabled: true
      retention_period: 168h # 1 week (in hrs, to ensure accepted as multiple of 24h)
    chunk_store_config:
      max_look_back_period: 168h # 1 week (in hrs, to ensure accepted as multiple of 24h)
    compactor:
      working_directory: /data/loki/retention
      shared_store: filesystem
      retention_enabled: true
      retention_delete_worker_count: 150

      # deletion-delay: regular
      compaction_interval: 10m
      retention_delete_delay: 1h
      delete_request_cancel_period: 1h

      # deletion-delay: fast (for fast purging of old logs; should only be used temporarily)
      # compaction_interval: 1m
      # retention_delete_delay: 1m
      # delete_request_cancel_period: 1m