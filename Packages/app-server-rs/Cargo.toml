[package]
name = "app-server-rs"
version = "0.1.0"
edition = "2021"
publish = false

[dependencies]
log = "0.4.16"
tracing = "0.1" # todo: remove this (since part of rust_shared now)
tracing-subscriber = { version="0.3", features = ["env-filter"] }
async-trait = "0.1.52"
#crossbeam-channel = "0.5.2"
flume = "0.10.10"
async-broadcast = "0.4.0"
deadpool = {version = "0.9.2", features = ["rt_tokio_1"]}
deadpool-postgres = "0.10.1"
indexmap = {version = "1.8.0", features = ["serde"]}
#dashmap = "4.0.2" # the API is hard to use correctly/safely (there are rules you have to follow that aren't compiled-ensured)
flurry = "0.4.0"
async-recursion = "1.0.0"
#refinery = { version = "0.8.4", features = ["tokio-postgres"]}
metrics = "0.18.1"
lazy_static = "1.4.0"
num_cpus = "1.0"
jsonschema = "0.16"
#tokio-pg-mapper = "0.2.0"
#tokio-pg-mapper-derive = "0.2.0"
dyn-clone = "1.0.4"
oauth2 = "4.3.0"
dotenv = "0.15.0"
jwt-simple = "0.11.2"
base64 = "0.13.1"
lexicon_fractional_index = "0.0.3"

# needed for async-graphql examples-base, for now
slab = "0.4.2"
futures-util = "0.3.0"
futures-timer = "3.0.2"

#rust-macros = { path = "../rust-macros" }
rust-shared = { path = "../rust-shared" }

# sync among all rust crates (ie. deps that have issues being subdeps accessed through rust_shared)
# ==========

serde = "1.0.144"

# build-time test
# ==========

itoa = "1.0.4"

# To calculate build time:
# 1) Run tilt-up-local and wait for everything to deploy and settle.
# 2) Change the version of the "itoa" crate to one of these variants: 1.0.0 -> [...] -> 1.0.4
# 3) In the tilt ui, press the update-pod button for the app-server-rs pod.
# 4) Observe the logs, to find the "[done: Xs]" value shown for the "cargo build" step in Packages/deploy/@RustBase/Dockerfile.
# 5) Observe the logs, to find the "[done: Xs]" value shown for the "cargo rustc" step in Packages/app-server-rs/Dockerfile.
# 6) Calculate: "build time" = the sum of the two values observed in steps 4-5. (might as well include the individual timings as well)

# Results:
# v-desktop, base #1: 9m11s (8m5s + 1m6s)
# v-desktop, base #2: 7m17s (6m14s + 1m3s)
# v-desktop, with volumes, no base-build #1: 30s
# v-desktop, with volumes, no base-build #2: 1.355s (cargo build realized that nothing actually needed recompiling)